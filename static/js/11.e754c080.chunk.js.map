{"version":3,"sources":["utils/sleep.ts","Components/Intro.tsx"],"names":["sleep","milliseconds","Promise","resolve","setTimeout","Intro","getContent","useContext","LanguageContext","isDark","ThemeContext","HEADER","INTRO","ABOUT_ME_TAG","text","setText","useState","useEffect","async","txt","i","length","prevText","charAt","helloFriend","React","createElement","className","style","marginTop","Link","to","fontWeight","fontSize","paddingLeft","paddingRight"],"mappings":"0JAAO,MAAMA,EAASC,GACb,IAAIC,QAASC,GAAYC,WAAWD,EAASF,ICwDvCI,UAnDSA,KACtB,MAAM,WAAEC,GAAeC,qBAAWC,MAC5B,OAAEC,GAAWF,qBAAWG,MACxB,OAAEC,EAAM,MAAEC,EAAK,aAAEC,GAAiBP,KACjCQ,EAAMC,GAAWC,mBAAiB,IAgBzC,OALAC,oBAAU,KATUC,WAClB,IAAIC,EAAM,gBACV,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAIE,OAAQD,IAC9BL,EAASO,GAAcA,EAAYH,EAAII,OAAOH,IACxB,MAAlBD,EAAII,OAAOH,UAAkBpB,EAAM,WACjCA,EAAM,MAKdwB,IAEC,IAGDC,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,KAAGC,UAAU,SACVb,EACDW,IAAAC,cAAA,QAAMC,UAAU,SAAQ,OAI5BF,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAKC,UAAU,SAAShB,GACxBc,IAAAC,cAAA,KAAGC,UAAU,YAAYC,MAAO,CAAEC,UAAW,SAC1CjB,EACDa,IAAAC,cAACI,IAAI,CACHC,GAAG,SACHJ,UAAW,UAAUlB,EAAS,QAAU,kBACxCmB,MAAO,CACLI,WAAY,SACZC,SAAU,OACVC,YAAa,MACbC,aAAc,QAGftB","file":"static/js/11.e754c080.chunk.js","sourcesContent":["export const sleep = (milliseconds: number) => {\n  return new Promise((resolve) => setTimeout(resolve, milliseconds));\n};\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { LanguageContext } from \"../Context/LanguageContext\";\nimport { ThemeContext } from \"../Context/ThemeContext\";\nimport { Link } from \"react-router-dom\";\nimport { sleep } from \"../utils/sleep\";\n\nconst Intro: React.FC = () => {\n  const { getContent } = useContext(LanguageContext);\n  const { isDark } = useContext(ThemeContext);\n  const { HEADER, INTRO, ABOUT_ME_TAG } = getContent();\n  const [text, setText] = useState<string>(\"\");\n\n  const helloFriend = async () => {\n    let txt = \"Hello, friend\";\n    for (let i = 0; i < txt.length; i++) {\n      setText((prevText) => (prevText += txt.charAt(i)));\n      if (txt.charAt(i) === \",\") await sleep(350);\n      await sleep(120);\n    }\n  };\n\n  useEffect(() => {\n    helloFriend();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"marginTop\">\n        <p className=\"hello\">\n          {text}\n          <span className=\"blink\">_</span>\n        </p>\n      </div>\n\n      <div>\n        <div className=\"intro\">{HEADER}</div>\n        <p className=\"paragraph\" style={{ marginTop: \"23px\" }}>\n          {INTRO}\n          <Link\n            to=\"/about\"\n            className={`col-sm ${isDark ? \"dark-\" : \"\"}navbar-button`}\n            style={{\n              fontWeight: \"bolder\",\n              fontSize: \"20px\",\n              paddingLeft: \"7px\",\n              paddingRight: \"7px\",\n            }}\n          >\n            {ABOUT_ME_TAG}\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Intro;\n"],"sourceRoot":""}