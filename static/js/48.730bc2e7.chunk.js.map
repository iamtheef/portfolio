{"version":3,"file":"static/js/48.730bc2e7.chunk.js","mappings":"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","sources":["utils/calculatePeriod.ts","Components/Experience.tsx"],"sourcesContent":["import { ILanguage } from \"../Context/LanguageContext\";\n\nexport interface IPeriod {\n  start: string;\n  end: string;\n}\n\nconst LITERALS = {\n  EN: {\n    years: (y: number) => (y > 1 ? \"years\" : \"year\"),\n    months: (m: number) => (m > 0 ? (m > 1 ? \"months\" : \"month\") : \"\"),\n    and: \" and \",\n  },\n  GR: {\n    years: (y: number) => (y > 1 ? \"χρόνια\" : \"χρόνος\"),\n    months: (m: number) => (m > 0 ? (m > 1 ? \"μήνες\" : \"μήνα\") : \"\"),\n    and: \" και \",\n  },\n};\n\nexport const calculateMonths = (date: IPeriod, language: ILanguage) => {\n  let start = date.start.split(\"/\");\n  let end = date.end.split(\"/\");\n  let years = 0;\n  let months = 0;\n  let startYear = Number(start[1]);\n  let endYear = Number(end[1]);\n  let startMonth = Number(start[0]);\n  let endMonth = Number(end[0]);\n\n  if (endMonth < startMonth) {\n    endYear -= 1;\n    endMonth += 12;\n  }\n\n  const startDate = new Date(startYear, startMonth - 1);\n  const endDate = new Date(endYear, endMonth - 1);\n  const timeDifference = endDate.getTime() - startDate.getTime();\n\n  months = Math.ceil(timeDifference / (30 * 24 * 60 * 60 * 1000));\n\n  years = Math.floor(months / 12);\n  months = months % 12;\n\n  if (years > 0 || months > 0) {\n    return `(${years} ${LITERALS[language].years(years)}${\n      years > 0 && months > 0 ? LITERALS[language].and : \"\"\n    }${months > 0 ? ` ${months} ${LITERALS[language].months(months)}` : \"\"})`;\n  } else {\n    return `(${months} ${LITERALS[language].months(months)})`;\n  }\n};\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { LanguageContext } from \"../Context/LanguageContext\";\nimport { ThemeContext } from \"../Context/ThemeContext\";\nimport loadable from \"@loadable/component\";\nimport { calculateMonths } from \"../utils/calculatePeriod\";\n\nconst Loader = loadable(() => import(\"../assets/Loader\"));\nconst ProjectCard = loadable(() => import(\"./ProjectCard\"));\n\ninterface Project {\n  name: string;\n  description: string;\n  duration: string;\n  company: string;\n  skills: string[];\n  language: string;\n}\n\nconst Experience: React.FC = () => {\n  const { getContent } = useContext(LanguageContext);\n  const { isDark } = useContext(ThemeContext);\n  const { WORK_EXP, PROJECTS } = getContent();\n  const [loaded] = useState(true);\n  const [projects, setProjects] = useState<any>(PROJECTS);\n  const { getTags, language } = useContext(LanguageContext);\n  const { aboutMe } = getTags();\n\n  useEffect(()=> {\n    setProjects(PROJECTS)\n  }, [language, PROJECTS])\n  if (!loaded) return <Loader />;\n  return (\n    <div className=\"container marginTop\">\n      <div className=\"row\" style={{ marginTop: \"5rem\", marginLeft: \"0.3rem\" }}>\n        <h1 className=\"intro\">{aboutMe.experience}</h1>\n        <div className=\"col-12\">\n          <ul>\n            {WORK_EXP.map((exp: any, index: number) => (\n              <li key={index}>\n                <b style={{ fontFamily: \"Nanum Gothic\", fontSize: \"20px\" }}>\n                  {exp.title}{\" \"}\n                </b>\n                <span>\n                  <i style={{ color: \"#60c8d6\", marginLeft: \"5px\" }}>\n                    {exp.period.text}{\" \"}\n                    {calculateMonths(exp.period.date, language)}\n                  </i>\n                  <p>{exp.description}</p>\n                </span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <h3 className=\"intro mt-5\">{getTags().experience.recent}</h3>\n      {projects.map((project: Project, i: number) => (\n        <div className=\"row mb-4\" key={project.name}>\n          <div className=\"col-md\">\n            <ProjectCard\n              name={project.name}\n              description={project.description}\n              company={project.company}\n              duration={project.duration}\n              skills={project.skills}\n              // url={project.html_url}\n            />\n            <hr className={`${isDark ? \"dark-\" : \"\"}hr`}></hr>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Experience;\n"],"names":["LITERALS","EN","years","y","months","m","and","GR","calculateMonths","date","language","start","split","end","startYear","Number","endYear","startMonth","endMonth","startDate","Date","timeDifference","getTime","Math","ceil","floor","concat","Loader","loadable","ProjectCard","Experience","getContent","useContext","LanguageContext","isDark","ThemeContext","WORK_EXP","PROJECTS","loaded","useState","projects","setProjects","getTags","aboutMe","useEffect","_jsxs","className","children","style","marginTop","marginLeft","_jsx","experience","map","exp","index","fontFamily","fontSize","title","color","period","text","description","recent","project","i","name","company","duration","skills"],"sourceRoot":""}